* License and COPYING
See [[file:COPYING][COPYING]] for license and copyright information.

* What is fogbugz-emacs?

Fogbugz-emacs is an interface for interacting with the FogBugz bug
tracking system. It lets you view, create, and update cases, projects,
and whatever else the FogBugz API gives you access to.

The FogBugz website has a listing of all the functionality that their
API provides. fogbugz-emacs aims to implement support for all of that
functionality.

* Org Mode Integration
fogbugz-emacs can be integrated with org-mode and that was the
original intention for creating fogbugz-emacs. Using properties it can
pull in more information about cases and construct a full list of
cases for a project.

* The Mock Server
fogbugz-emacs comes with a web server that simulates the FogBugz API.
This was created due to a lack of Internet when moving into a new
place. Another reason is that sometimes you can't do things live. At
work, it would be a problem to create multiple projects and cases
while working on fogbugz-emacs. Other users would see this and think
something is wrong.

A local mock server reduces latency to...basically no latency.

I tried to replicate as much functionality as possible. My reasoning
is that an interface to a web API is incomplete, and very very
optimistic, if it can only handle positive cases. It should be able to
handle the cases where something goes wrong.

The mock server is written in Common Lisp and has been tested with
SBCL on GNU/Linux. It uses the fantastic Hunchentoot web server
library and the CXML library to generate the XML output.

* Tasks
** fogbugz-emacs
*** DONE [[file:./fogbugz.el::fogbugz-logon][Login]] and [[file:./fogbugz.el::fogbugz-logoff][logoff]] commands
Need to store a token
*** DONE List case filters, file:./fogbugz.el::fogbugz-list-filters
*** DONE Set the current case filter, file:./fogbugz.el::fogbugz-set-current-filter
*** TODO List cases
*** DONE List projects, file:./fogbugz.el::fogbugz-list-projects
*** DONE List areas
*** DONE List areas for a project
*** TODO List categories
*** TODO List priorities
*** DONE List people
*** TODO List statuses
*** TODO List milestones (a.k.a fix-fors)
*** TODO Create case
*** TODO Edit case
*** TODO Mapping field names of fogbugz objects to lispy names
When a field name begins with f it's a boolean value, should convert
"true" to T and the "false" to NIL. The lispy name should be suffixed
with "-p".

When a field name begins with s it's a string value.

When it begins with ix it's an ID of another object so "-id" should be
the suffix of the lispy name.

The type notation should be dropped from the field name when
converting to the lispy name.

Examples:
  - fWrite :: read-and-write-p
  - ixPersonOwner :: owner-id
  - sPerson :: person
  - fDeleted :: deleted-p
** org-fogbugz
*** TODO Pull case from API
*** TODO Create new case
Properties:
  - id
  - last-updated
  - creator
  - area

Tags are listed beside the item.

Assumes that the TODO statuses are setup the same way.
*** TODO Push case to API
*** TODO Update case
Using a timestamp stored in the properties, Last-Updated or something
like that. Need to be able to force updating with a prefix argument.
*** DONE Create tags alist
*** TODO Modify tags alist so that it makes categories a separate tag group, file:org-fogbugz.el::org-fogbugz-tag-alist
** Mock Server
*** TODO Implement commands
**** TODO [#A] Implement view case command
**** TODO [#B] Implement create case command
**** TODO [#B] Implement edit case command
**** DONE Implement login command
**** DONE Implement log off command
**** DONE Implement list filters command
**** DONE Implement API version command
* Example Project:The Farm (expected output from org-fogbugz)
:PROPERTIES:
:ProjectId: a
:Owner: [[mailto:grandpa@oldmacdonald.com][Old MacDonald]] (555-294-4778)
:Group: Internal
:END:

This is the expected output from the org-fogbugz code.
** TODO Duck, Duck... but No Goose!						 :first:second:third:
:PROPERTIES:
:CaseId: 123
:OriginalTitle: Problem finding the goose...
:OpenedBy: [[mailto:grandpa@oldmacdonald.com][Old MacDonald]]
:Area: Pond
:Category: Feature
:Effort: 3 hours
:LastUpdated: 2012-11-11
:END:

(The TODO status is set when the case is open, when it's closed, the
status is switched to DONE)

(This is the latest text summary) I searched the docs, but no goose!

(There is no due date for this case, but if there were, it'd be used
for the DEADLINE)
